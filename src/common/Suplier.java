/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package common;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RH RIFAT
 */
public class Suplier extends javax.swing.JFrame {

Connection con=null;
Statement st=null;
    PreparedStatement ps=null;
    ResultSet rs=null;
    public Suplier() {
        initComponents();
        showdata();
    }
    void config(){
    try {
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/super_shop", "root", "");
        
    } catch (SQLException ex) {
        
    }
}
    void clsome(){
        a1.setText("");
    a2.setText("");
    a3.setText("");
    a4.setText("");
    a5.setText("");
    }
void cldata(){
    a1.setText("");
    a2.setText("");
    a3.setText("");
    a4.setText("");
    a5.setText("");
    DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
    dt.setRowCount(0);
    showdata();
}
void showdata(){
    try {
        DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
    dt.setRowCount(0);
        config();
        String ss="SELECT * FROM `super_shop`.`suplier` ";
        ps=con.prepareStatement(ss);
        rs=ps.executeQuery();
        while(rs.next()){
            dt.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
        }
    } catch (SQLException ex) {
        Logger.getLogger(Suplier.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        a1 = new javax.swing.JTextField();
        a4 = new javax.swing.JTextField();
        a2 = new javax.swing.JTextField();
        a3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        a5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Suplier Data");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));
        jPanel1.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 0, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Suplier Data");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 1150, 80);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1150, 80);

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Address");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 140, 120, 50);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("National Id no");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(20, 40, 120, 50);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Name");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(20, 90, 120, 50);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Contact");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(20, 190, 120, 50);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Details");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(20, 240, 120, 50);

        a1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        a1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a1KeyTyped(evt);
            }
        });
        jPanel2.add(a1);
        a1.setBounds(140, 40, 320, 50);

        a4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        a4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a4KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a4KeyTyped(evt);
            }
        });
        jPanel2.add(a4);
        a4.setBounds(140, 190, 320, 50);

        a2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        a2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a2KeyTyped(evt);
            }
        });
        jPanel2.add(a2);
        a2.setBounds(140, 90, 320, 50);

        a3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        a3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a3KeyPressed(evt);
            }
        });
        jPanel2.add(a3);
        a3.setBounds(140, 140, 320, 50);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "National Id", "Name", "Address", "Contact", "Details"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(490, 40, 630, 250);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Add");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(290, 370, 180, 40);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Update");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(470, 370, 180, 40);

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setText("Clear");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(380, 410, 180, 40);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Exit");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(560, 410, 180, 40);

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton4.setText("Delete");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(650, 370, 180, 40);

        a5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        a5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a5KeyPressed(evt);
            }
        });
        jPanel2.add(a5);
        a5.setBounds(140, 240, 320, 50);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 1150, 500);

        setSize(new java.awt.Dimension(1160, 616));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO clear
        cldata();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO exit
        int i=JOptionPane.showConfirmDialog(this, "Are you want to exit?","Confirm message",JOptionPane.YES_NO_OPTION);
        if(i==JOptionPane.YES_OPTION){
            dispose();
        }
        else{

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try {
        // TODO add
        config();
        String id=a1.getText();
        String name=a2.getText();
        String add=a3.getText();
        String contact=a4.getText();
        String det=a5.getText();
        if(a1.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "National id no. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a1.requestFocus();
        }
        else if(a2.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Suplier name is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a2.requestFocus();
        }
        else if(a3.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Address is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a3.requestFocus();
        }
        else if(a4.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Contact info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a4.requestFocus();
        }
        else if(a5.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Details info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a5.requestFocus();
        }
        else{
        String s="INSERT INTO `super_shop`.`suplier` VALUES(?,?,?,?,?)";
        ps=con.prepareStatement(s);
        ps.setString(1, id);
        ps.setString(2, name);
        ps.setString(3, add);
        ps.setString(4, contact);
        ps.setString(5, det);
        DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
        dt.setRowCount(0);
        int p=ps.executeUpdate();
        if(p>0){
            JOptionPane.showMessageDialog(this, "Data add success");
            dt.addRow(new Object[]{id,name,add,contact,det});
            clsome();
        }
        else{
            JOptionPane.showMessageDialog(this, "Data add failed");
        }}
    } catch (SQLException ex) {
        Logger.getLogger(Suplier.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO update
        try {
        config();
        DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
        String id=a1.getText();
        String name=a2.getText();
        String add=a3.getText();
        String contact=a4.getText();
        String det=a5.getText();
        if(a1.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "National id no. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a1.requestFocus();
        }
        else if(a2.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Suplier name is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a2.requestFocus();
        }
        else if(a3.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Address is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a3.requestFocus();
        }
        else if(a4.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Contact info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a4.requestFocus();
        }
        else if(a5.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Details info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a5.requestFocus();
        }
        else{
        String s="UPDATE `super_shop`.`suplier` SET `Name` =?,`Address` =?,`Contact` =?,`Details` =? WHERE `National Id` =?";
        ps=con.prepareStatement(s);
        ps.setString(1, name);
        ps.setString(2, add);
        ps.setString(3, contact);
        ps.setString(4, det);
        ps.setString(5, ""+dt.getValueAt(jTable1.getSelectedRow(), 0));
        dt.setRowCount(0);
        int p=ps.executeUpdate();
        if(p>0){
            JOptionPane.showMessageDialog(this, "Data update success");
            dt.addRow(new Object[]{id,name,add,contact,det});
            clsome();
        }
        else{
            JOptionPane.showMessageDialog(this, "Data update failed");
        }}
    } catch (SQLException ex) {
        Logger.getLogger(Suplier.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void a1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a1KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(a1.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "National id no. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a1.requestFocus();
           }
           else{
               a2.requestFocus();
           }
       }
    }//GEN-LAST:event_a1KeyPressed

    private void a2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a2KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(a2.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Suplier name is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a2.requestFocus();
           }
           else{
               a3.requestFocus();
           }
       }
    }//GEN-LAST:event_a2KeyPressed

    private void a3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a3KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(a3.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Address is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a3.requestFocus();
           }
           else{
               a4.requestFocus();
           }
       }
    }//GEN-LAST:event_a3KeyPressed

    private void a4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a4KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(a4.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Contact info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a4.requestFocus();
           }
           else{
               a5.requestFocus();
           }
       }
    }//GEN-LAST:event_a4KeyPressed

    private void a5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a5KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(a5.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Details info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a5.requestFocus();
           }
           else{
              // a2.requestFocus();
           }
       }
    }//GEN-LAST:event_a5KeyPressed

    private void a1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a1KeyTyped
        char ch=evt.getKeyChar();
       if(!(Character.isDigit(ch)) || ch==KeyEvent.VK_ENTER || ch==KeyEvent.VK_BACK_SPACE || ch==KeyEvent.VK_DELETE){
           evt.consume();
       }
    }//GEN-LAST:event_a1KeyTyped

    private void a4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a4KeyTyped
     char ch=evt.getKeyChar();
       if(!(Character.isDigit(ch)) || ch==KeyEvent.VK_ENTER || ch==KeyEvent.VK_BACK_SPACE || ch==KeyEvent.VK_DELETE){
           evt.consume();
       }
    }//GEN-LAST:event_a4KeyTyped

    private void a2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a2KeyTyped
        char ch=evt.getKeyChar();
       if((Character.isDigit(ch)) || ch==KeyEvent.VK_ENTER || ch==KeyEvent.VK_BACK_SPACE || ch==KeyEvent.VK_DELETE){
           evt.consume();
       }
    }//GEN-LAST:event_a2KeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
        a1.setText(""+dt.getValueAt(jTable1.getSelectedRow(), 0));
        a2.setText(""+dt.getValueAt(jTable1.getSelectedRow(), 1));
        a3.setText(""+dt.getValueAt(jTable1.getSelectedRow(), 2));
        a4.setText(""+dt.getValueAt(jTable1.getSelectedRow(), 3));
        a5.setText(""+dt.getValueAt(jTable1.getSelectedRow(), 4));
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO delete
        try {
        config();
        DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
        String id=a1.getText();
        String name=a2.getText();
        String add=a3.getText();
        String contact=a4.getText();
        String det=a5.getText();
        if(a1.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "National id no. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a1.requestFocus();
        }
        else if(a2.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Suplier name is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a2.requestFocus();
        }
        else if(a3.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Address is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a3.requestFocus();
        }
        else if(a4.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Contact info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a4.requestFocus();
        }
        else if(a5.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Details info. is empty!!","Error message",JOptionPane.ERROR_MESSAGE);
               a5.requestFocus();
        }
        else{
        String s="DELETE FROM `super_shop`.`suplier` WHERE `National Id` =?";
        ps=con.prepareStatement(s);
        ps.setString(1, ""+dt.getValueAt(jTable1.getSelectedRow(), 0));
        dt.setRowCount(0);
        int p=ps.executeUpdate();
        if(p>0){
            JOptionPane.showMessageDialog(this, "Data delete success");
            clsome();
            showdata();
        }
        else{
            JOptionPane.showMessageDialog(this, "Data delete failed");
        }}
    } catch (SQLException ex) {
        Logger.getLogger(Suplier.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Suplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Suplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Suplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Suplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Suplier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a1;
    private javax.swing.JTextField a2;
    private javax.swing.JTextField a3;
    private javax.swing.JTextField a4;
    private javax.swing.JTextField a5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
